go.property("velocity", vmath.vector3())
go.property("accel", vmath.vector3())

local BASE_DIR = vmath.vector3(0, 1, 0)
local MAX_SPEED = 30.0
local MAX_ACCEL = 25.0

function init(self)
	self.dir = BASE_DIR
	self.pos = go.get_position()

	self.flag = vmath.vector3()
	self.toFlag = 0
end

function updateVelocity(self, accel)
	setVelocity(self, self.velocity + accel)
end

function setVelocity(self, vel)
	self.velocity = vel

	local speed = vmath.length(self.velocity)
	if speed > 1 then
		self.dir = self.velocity * (1.0 / speed)

		--self.dir.x = vel.x / speed
		--self.dir.y = vel.y / speed
	end

	if speed > MAX_SPEED then
		self.velocity = self.dir * MAX_SPEED
	end
end

function setFlag(self, flag_pos)
	self.flag = flag_pos
	self.toFlag = 5.0
end

function update(self, dt)
	if self.toFlag > 0 then
		self.toFlag = self.toFlag - dt
		local dirvel = self.flag - self.pos
		local accelFlag = vmath.normalize(dirvel - self.velocity) * MAX_ACCEL
		--local accelFlag = dirvel - self.velocity
		self.accel = self.accel * 0.5 + accelFlag * 1.5
	end
	
	updateVelocity(self, self.accel * dt)

	self.pos = self.pos + self.velocity * dt
	go.set_rotation(vmath.quat_from_to(BASE_DIR, self.dir))
	go.set_position(self.pos)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("flag") then
		setFlag(self, message.pos)
	--elseif message_id == hash("acceleration") then
	--	updateVelocity(self, message.accel)
	end
end
