go.property("velocity", vmath.vector3())
go.property("accel", vmath.vector3())
--go.property("explo", vmath.vector3())

local BASE_DIR = vmath.vector3(0, 1, 0)
local MAX_SPEED = 30.0
local MAX_ACCEL = 25.0

function init(self)
	self.dir = BASE_DIR
	self.pos = go.get_position()

	self.flag = vmath.vector3()
	self.toFlag = 0
end

function final(self)
	local sheeps = require "main.sheeps"
	sheeps.remove(go.get_id())
end

function updateVelocity(self, accel)
	self.velocity = self.velocity + accel

	local speed = vmath.length(self.velocity)
	if speed > 1 then
		self.dir = self.velocity * (1.0 / speed)
	end

	if speed > MAX_SPEED then
		self.velocity = self.dir * MAX_SPEED
	end
end

function setFlag(self, flag_pos)
	self.flag = flag_pos
	self.toFlag = 5.0
end

function updateFlagAccel(self, dt)
	if self.toFlag > 0 then
		self.toFlag = self.toFlag - dt
		--local dirvel = self.flag - self.pos
		--local accelFlag = vmath.normalize(dirvel - self.velocity) * MAX_ACCEL
		local accelFlag = vmath.normalize(self.flag - self.pos) * MAX_ACCEL
		self.accel = self.accel * 0.5 + accelFlag * 1.5
	end
end

function update(self, dt)
	updateFlagAccel(self, dt)
	updateVelocity(self, self.accel * dt)

	self.pos = self.pos + self.velocity * dt

	--self.pos = self.pos + self.explo * dt
	--self.explo = self.explo * 0.5
	
	go.set_rotation(vmath.quat_from_to(BASE_DIR, self.dir))
	go.set_position(self.pos)

	--local size = (vmath.length(self.explo) + 1) / 300
	--if size < 1 then
	--	size = 1
	--end
	--go.set_scale(vmath.vector3(size))
end

function makeBlack(self)
	msg.post("#sprite", "play_animation", { id = hash("sheep_black") })
end

function on_message(self, message_id, message, sender)
	if message_id == hash("flag") then
		setFlag(self, message.pos)
	elseif message_id == hash("flagreset") then
		self.toFlag = 0
	elseif message_id == hash("black") then
		makeBlack(self)
	end
end
