go.property("velocity", vmath.vector3())
go.property("accel", vmath.vector3())

local BASE_DIR = vmath.vector3(0, 1, 0)
local MAX_SPEED = 40.0 -- 30
local MAX_ACCEL = 60.0 -- 25

function init(self)
	self.dir = BASE_DIR
	self.pos = go.get_position()

	self.flag = vmath.vector3()
	self.toFlag = 0
	self.black = false

	self.respos = vmath.vector3(0, 0, math.random() * 0.1)
	self.lightpos = vmath.vector4(0, 0, 20, 20)
	self.shadow = factory.create("/level#fshadow", self.pos)
end

function final(self)
	local sheeps = require "main.sheeps"
	sheeps.remove(go.get_id())

	if not self.black then
		sound.play("#sound_die")
	end

	msg.post("/level#script", "eaten", { black = self.black, pos = self.pos })
	go.delete(self.shadow)
end

function updateVelocity(self, accel)
	self.velocity = self.velocity + accel

	local speed = vmath.length(self.velocity)
	if speed > 3 then
		self.dir = self.velocity * (1.0 / speed)
	end

	if speed > MAX_SPEED then
		self.velocity = self.dir * MAX_SPEED
	end
end

function setFlag(self, flag_pos)
	self.flag = flag_pos
	self.toFlag = 10.0
end

function resetFlag(self)
	self.flag.x = -10
	self.flag.y = -10
	self.toFlag = 0
end

function collisionFlag(self)
	local dir = self.pos - self.flag
	return (vmath.length_sqr(dir) < 100.0)
end

function updateFlagAccel(self, dt)
	if collisionFlag(self) then
		local sheeps = require "main.sheeps"
		sheeps.resetFlag()
		resetFlag(self)
		return
	end

	if self.toFlag > 0 then
		self.toFlag = self.toFlag - dt
		--local dirvel = self.flag - self.pos
		--local accelFlag = vmath.normalize(dirvel - self.velocity) * MAX_ACCEL
		local accelFlag = vmath.normalize(self.flag - self.pos) * MAX_ACCEL
		self.accel = self.accel * 0.5 + accelFlag * 0.5
	end
end

function update(self, dt)
	updateFlagAccel(self, dt)
	updateVelocity(self, self.accel * dt)

	self.pos = self.pos + self.velocity * dt

	-- handle z-fighting
	self.respos.x = self.pos.x
	self.respos.y = self.pos.y

	go.set_rotation(vmath.quat_from_to(BASE_DIR, self.dir))
	go.set_position(self.respos)
	go.set_position(self.respos, self.shadow)

	-- shader fake lighting
	self.lightpos.x = self.pos.x - 5.0
	self.lightpos.y = self.pos.y - 7.0
	sprite.set_constant("#sprite", "possize", self.lightpos)

	--[[
	local tint = vmath.vector4(1.0, 1.0, 1.0, 0.5)
	if self.toFlag > 0 then
		tint.w = 1.0
	end

	sprite.set_constant("#sprite", "tint", tint)
	]]
end

function makeBlack(self)
	self.black = true
	msg.post("#sprite", "play_animation", { id = hash("sheep_black") })
end

function on_message(self, message_id, message, sender)
	if message_id == hash("flag") then
		setFlag(self, message.pos)
	elseif message_id == hash("flagreset") then
		resetFlag(self)
	elseif message_id == hash("black") then
		makeBlack(self)
	end
end
